# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "thunderbolt" "vmd" "nvme" "usb_storage" "uas" "sd_mod" "rtsx_pci_sdmmc"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/115efedc-7af7-4923-bb60-84731091dddc";
    fsType = "btrfs";
    options = ["subvol=@"];
  };

  boot.initrd.luks.devices."nixos-crypt".device = "/dev/disk/by-uuid/e0f6f5de-f694-41a9-b5b9-aa497f395c5b";

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/115efedc-7af7-4923-bb60-84731091dddc";
    fsType = "btrfs";
    options = ["subvol=@home"];
  };

  fileSystems."/tmp" = {
    device = "/dev/disk/by-uuid/115efedc-7af7-4923-bb60-84731091dddc";
    fsType = "btrfs";
    options = ["subvol=@tmp"];
  };

  fileSystems."/var" = {
    device = "/dev/disk/by-uuid/115efedc-7af7-4923-bb60-84731091dddc";
    fsType = "btrfs";
    options = ["subvol=@var"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/8770-C65E";
    fsType = "vfat";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
